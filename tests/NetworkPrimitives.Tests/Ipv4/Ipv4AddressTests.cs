#nullable enable

using System;
using System.Net;
using NetworkPrimitives.Ipv4;
using NUnit.Framework;

namespace NetworkPrimitives.Tests.Ipv4
{
    [TestFixture]
    public class Ipv4AddressTests
    {
        [Test]
        [TestCase("244.214.215.163", true)]
        [TestCase("84.191.228.40", true)]
        [TestCase("200.97.83.142", true)]
        [TestCase("209.120.106.210", true)]
        [TestCase("154.104.32.33", true)]
        [TestCase("189.143.127.145", true)]
        [TestCase("198.196.67.154", true)]
        [TestCase("10.21.52.235", true)]
        [TestCase("234.165.69.77", true)]
        [TestCase("17.174.198.38", true)]
        [TestCase("111.38.88.75", true)]
        [TestCase("36.26.215.6", true)]
        [TestCase("153.215.18.167", true)]
        [TestCase("120.117.45.112", true)]
        [TestCase("191.161.189.19", true)]
        [TestCase("16.42.88.57", true)]
        [TestCase("122.216.252.17", true)]
        [TestCase("79.43.175.125", true)]
        [TestCase("79.72.122.87", true)]
        [TestCase("248.63.20.23", true)]
        [TestCase("225.42.42.6", true)]
        [TestCase("134.46.117.32", true)]
        [TestCase("72.160.179.55", true)]
        [TestCase("12.77.241.248", true)]
        [TestCase("152.203.98.79", true)]
        [TestCase("130.37.28.130", true)]
        [TestCase("204.177.125.37", true)]
        [TestCase("135.217.252.52", true)]
        [TestCase("101.133.135.77", true)]
        [TestCase("110.211.130.187", true)]
        [TestCase("239.192.104.125", true)]
        [TestCase("197.54.111.18", true)]
        [TestCase("248.190.112.173", true)]
        [TestCase("198.175.170.240", true)]
        [TestCase("180.223.130.136", true)]
        [TestCase("252.25.206.232", true)]
        [TestCase("84.35.86.17", true)]
        [TestCase("193.223.102.94", true)]
        [TestCase("139.254.81.101", true)]
        [TestCase("171.57.135.68", true)]
        [TestCase("110.16.23.222", true)]
        [TestCase("68.231.174.107", true)]
        [TestCase("3.82.172.189", true)]
        [TestCase("243.32.132.113", true)]
        [TestCase("225.12.72.166", true)]
        [TestCase("13.127.252.250", true)]
        [TestCase("147.161.211.134", true)]
        [TestCase("82.156.232.8", true)]
        [TestCase("58.60.52.142", true)]
        [TestCase("183.226.206.20", true)]
        [TestCase("63.132.185.33", true)]
        [TestCase("143.25.217.18", true)]
        [TestCase("71.71.26.123", true)]
        [TestCase("247.247.163.201", true)]
        [TestCase("67.88.214.99", true)]
        [TestCase("78.151.142.0", true)]
        [TestCase("134.80.69.85", true)]
        [TestCase("155.11.248.103", true)]
        [TestCase("236.6.93.134", true)]
        [TestCase("229.0.191.199", true)]
        [TestCase("124.10.48.201", true)]
        [TestCase("91.184.110.3", true)]
        [TestCase("182.86.82.16", true)]
        [TestCase("22.139.1.247", true)]
        [TestCase("109.57.80.80", true)]
        [TestCase("165.228.84.20", true)]
        [TestCase("145.124.181.137", true)]
        [TestCase("85.157.141.88", true)]
        [TestCase("189.136.64.168", true)]
        [TestCase("158.226.81.64", true)]
        [TestCase("66.215.77.47", true)]
        [TestCase("213.73.79.44", true)]
        [TestCase("156.212.10.4", true)]
        [TestCase("118.41.163.76", true)]
        [TestCase("238.129.60.191", true)]
        [TestCase("189.75.132.142", true)]
        [TestCase("94.184.158.100", true)]
        [TestCase("100.169.150.44", true)]
        [TestCase("201.169.186.149", true)]
        [TestCase("70.91.111.41", true)]
        [TestCase("157.201.209.234", true)]
        [TestCase("217.213.64.28", true)]
        [TestCase("35.128.131.116", true)]
        [TestCase("196.220.169.212", true)]
        [TestCase("0.201.76.200", true)]
        [TestCase("241.203.244.189", true)]
        [TestCase("243.152.69.175", true)]
        [TestCase("115.174.109.202", true)]
        [TestCase("77.142.18.206", true)]
        [TestCase("69.119.230.16", true)]
        [TestCase("19.130.197.235", true)]
        [TestCase("11.255.204.97", true)]
        [TestCase("247.244.180.141", true)]
        [TestCase("179.179.224.34", true)]
        [TestCase("222.208.30.31", true)]
        [TestCase("91.249.41.199", true)]
        [TestCase("170.156.185.230", true)]
        [TestCase("28.208.57.185", true)]
        [TestCase("101.29.242.129", true)]
        [TestCase("206.15.21.85", true)]
        [TestCase("123.129.145.146", true)]
        [TestCase("228.96.110.131", true)]
        [TestCase("223.29.148.68", true)]
        [TestCase("85.107.12.36", true)]
        [TestCase("201.231.93.112", true)]
        [TestCase("23.180.49.15", true)]
        [TestCase("253.120.213.44", true)]
        [TestCase("35.52.211.236", true)]
        [TestCase("13.238.58.205", true)]
        [TestCase("6.245.123.129", true)]
        [TestCase("176.39.70.178", true)]
        [TestCase("111.128.165.209", true)]
        [TestCase("28.210.69.156", true)]
        [TestCase("149.56.223.117", true)]
        [TestCase("149.59.117.225", true)]
        [TestCase("230.193.219.196", true)]
        [TestCase("198.219.76.26", true)]
        [TestCase("229.115.52.222", true)]
        [TestCase("69.239.133.185", true)]
        [TestCase("148.122.122.200", true)]
        [TestCase("226.59.238.133", true)]
        [TestCase("85.25.206.138", true)]
        [TestCase("178.41.253.173", true)]
        [TestCase("237.30.216.96", true)]
        [TestCase("105.89.205.123", true)]
        [TestCase("157.76.51.182", true)]
        [TestCase("88.250.141.27", true)]
        [TestCase("113.197.178.251", true)]
        [TestCase("203.13.101.227", true)]
        [TestCase("26.111.49.164", true)]
        [TestCase("84.237.14.222", true)]
        [TestCase("134.209.92.181", true)]
        [TestCase("116.198.208.91", true)]
        [TestCase("237.170.209.135", true)]
        [TestCase("205.197.110.251", true)]
        [TestCase("10.85.28.143", true)]
        [TestCase("80.221.147.135", true)]
        [TestCase("198.8.241.68", true)]
        [TestCase("215.87.21.24", true)]
        [TestCase("68.127.97.81", true)]
        public void TestTryParse(string input, bool valid)
        {
            var success = Ipv4Address.TryParse(input, out var charsRead, out var address);
            Assert.AreEqual(valid, success);
            if (valid == false) return;
#pragma warning disable 618
            var expectedValue = (uint)IPAddress.Parse(input).Address;
#pragma warning restore 618

            
            Assert.AreEqual(input.Length, charsRead);
            Assert.AreEqual(expectedValue, address.Value.SwapEndianIfLittleEndian());
        }
    }
}